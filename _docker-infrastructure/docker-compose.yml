---
version: '3.6'

networks:
  frontend:
    external:
      name: nginx-proxy
  backend:
    external:
      name: ${COMPOSE_PROJECT_NAME}.backend

services:
  nginx:
    build:
      context: docker/nginx
    container_name: ${COMPOSE_PROJECT_NAME}.nginx
    networks:
      - frontend
      - backend
    env_file:
      - application.env
    restart: unless-stopped
    depends_on:
      - node
    volumes:
      - ../:/app/
      - ./docker/nginx/sites/:/etc/nginx/sites-available/
    labels:
      traefik.enable: true
      traefik.frontend.whitelistSourceRange: '${IP_WHITE_LIST}'
      traefik.front.frontend.rule: 'Host:${APP_DOMAIN}'
      traefik.proxy.frontend.rule: 'Host:${PROXY_DOMAIN};PathPrefixStrip:/trans-api;AddPrefix:/api'
      traefik.storage.frontend.rule: 'Host:${PROXY_DOMAIN};PathPrefixStrip:/trans-static;AddPrefix:/static'
      traefik.frontend.redirect.entryPoint: 'https'
      traefik.port: 80
      traefik.protocol: 'http'

  node:
    build:
      context: docker/node
    restart: unless-stopped
    container_name: ${COMPOSE_PROJECT_NAME}.node
    environment:
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${COMPOSE_PROJECT_NAME}.postgres
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    env_file:
      - application.env
    networks:
      - frontend
      - backend
    ports:
      - 3000:3000
      - 9229:9229
    volumes:
      - ../:/app/
